# This workflow sets up a Windows Server 2025 environment, enables RDP,
# and then runs Apache Guacamole in Docker containers.
# Guacamole provides a web-based interface to the RDP session.
# Finally, it uses ngrok to expose the Guacamole web UI to the internet.
#
# How to use:
# 1. Add your ngrok auth token to your repository's secrets with the name NGROK_AUTH_TOKEN.
# 2. Run the workflow.
# 3. Check the "Create Tunnel" step in the workflow logs to get the ngrok URL.
# 4. Open the URL in your browser. You will be automatically logged into the RDP session.

name: RDP-via-Guacamole-Windows-2025

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: windows-2025
    timeout-minutes: 9999
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Enable RDP and Set User Password
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
          $password = "WindowsPassword123!"
          Write-Host "Setting password for runneradmin"
          Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText $password -Force)
          # Store the password for later use in the Guacamole config
          echo "RDP_PASSWORD=$password" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        shell: powershell

      - name: Enable Docker Prerequisites
        run: |
          Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V -All -NoRestart
          Enable-WindowsOptionalFeature -Online -FeatureName VirtualMachinePlatform -All -NoRestart
        shell: powershell

      - name: Install Chocolatey
        run: Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
        shell: powershell

      - name: Install Docker Desktop with Chocolatey
        run: choco install docker-desktop --yes --params "--set-switch-for-service-account"
        shell: powershell

      - name: Start Docker Engine
        run: |
          # Start the Docker service
          & "C:\Program Files\Docker\Docker\Docker Engine\dockerd.exe" &
          # Wait a bit for the Docker engine to be ready
          Start-Sleep -Seconds 30
        shell: powershell

      - name: Create Guacamole Configuration
        run: |
          # Create a directory for Guacamole's configuration files
          New-Item -Path "C:\guac-config" -ItemType Directory

          # Create the docker-compose.yml file to define the Guacamole services
          @"
          version: '3.8'
          services:
            guacd:
              image: guacamole/guacd
              container_name: guacd
              restart: always
              networks:
                - guacamole-net

            guacamole:
              image: guacamole/guacamole
              container_name: guacamole
              restart: always
              ports:
                - "8080:8080" # Expose web UI on port 8080
              depends_on:
                - guacd
              environment:
                GUACD_HOSTNAME: guacd
                GUACAMOLE_HOME: /config
              volumes:
                - ./config:/config # Mount the config directory
              networks:
                - guacamole-net

          networks:
            guacamole-net:
              driver: bridge
          "@ | Out-File -FilePath "docker-compose.yml" -Encoding utf8

          # Create the user-mapping.xml to define the RDP connection for auto-login
          # This connects to the host's RDP server from inside the container
          @"
          <user-mapping>
              <authorize>
                  <connection name="Windows Server 2025 - RDP">
                      <protocol>rdp</protocol>
                      <param name="hostname">host.docker.internal</param>
                      <param name="port">3389</param>
                      <param name="username">runneradmin</param>
                      <param name="password">${{ env.RDP_PASSWORD }}</param>
                      <param name="ignore-cert">true</param>
                      <param name="security">any</param>
                      <param name="enable-drive">true</param>
                      <param name="drive-path">/shared</param>
                      <param name="drive-name">Shared</param>
                  </connection>
              </authorize>
          </user-mapping>
          "@ | Out-File -FilePath "C:\guac-config\user-mapping.xml" -Encoding utf8
        shell: powershell

      - name: Run Guacamole Containers
        run: docker-compose up -d
        shell: powershell

      - name: Deploy and Configure ngrok
        env:
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
        run: |
          # Download and unzip ngrok
          Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip
          Expand-Archive ngrok.zip

          # Authenticate ngrok
          .\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
        shell: powershell

      - name: Create Tunnel to Guacamole Web UI
        run: .\ngrok.exe http 8080 --log=stdout
        shell: powershell
